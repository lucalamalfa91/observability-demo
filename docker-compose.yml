services:

  otel-collector:
    image: otel/opentelemetry-collector:0.111.0
    container_name: otelcol
    command: [ "--config=/etc/otelcol-config.yml"]
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "8889:8889"   # Prometheus exporter metrics
    volumes:
      - ./otelcol-observability-config/otelcol-config.yml:/etc/otelcol-config.yml
  
  prometheus:
    image: prom/prometheus:v2.46.0
    container_name: prometheus
    ports:
      - "9090:9090"
    command:  
    - "--config.file=/etc/prometheus-config.yml"
    - "--web.enable-remote-write-receiver"
    - "--enable-feature=exemplar-storage"
    volumes:
      - ./otelcol-observability-config/prometheus-config.yml:/etc/prometheus-config.yml
    depends_on:
      - otel-collector 

  loki:
    image: grafana/loki:3.1.1
    container_name: loki
    ports:
      - "3100"  # loki
      - "4317"  # otlp grpc
      - "4318"  # otlp http
    command: [ "--config.file=/etc/loki-config.yml" ]
    volumes:
      - ./otelcol-observability-config/loki-config.yml:/etc/loki-config.yml
    depends_on:
      - otel-collector

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200"  # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
    command: [ "--config.file=/etc/tempo-config.yml"]
    volumes:
      - ./otelcol-observability-config/tempo-config.yml:/etc/tempo-config.yml
      - ./tempo-data:/tmp/tempo
    depends_on:
      - otel-collector
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - loki
      - prometheus
      - tempo
  
  weather-forecast:
    container_name: weather-forecast
    build:
      context: .
      dockerfile: ./weather-forecast/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8080"
    depends_on:
      - otel-collector
      - prometheus
      - grafana
      - loki
      - tempo
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/weatherforecast" ]
      interval: 30s
      retries: 3